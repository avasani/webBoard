WebBoardPoC:
This module is a proof of concept for WebBoard.
You can see the running demo here on the heruko cloud:
http://morning-taiga-2630.herokuapp.com/

To run this application on the local machine, do following changes:
$ cd webRTCPoC
$ sudo npm install express body-parser
$ vim index.js
#Modify the last line from s/app.listen(((process.env.PORT || 5000)))/app.listen(3000)/g
$ nodejs index.js (node index.js on fedora)
#Open the application with the path as "127.0.0.1:3000"

This demo demonstrate the single user and single client scribbling application. Since the
server uses single buffer right now, hence only one user can see the actual stokes.

The design will be changes the to support multiple users and multiple images with live and
recorded storage.

WebBoard:
This module is the base module of the final application.
It includes bootstrap for css, uses GhostScript and spindrift module for converting pdf to
images,uses formidable for uploading the pdf to the server, uses jquery for dynamic changing
of grids and uses passport module for authentication of user during login and redirects to
either the student or instructor page.

First you need to register yourself using the 'Register' button on the login form. Once you
are done, you can login using your credentials.

To run this appplication on the local machine, do the following.
$ npm install 
$ sudo apt-get install npm 
$ sudo apt-get install nodejs-dev 
$ sudo apt-get install npm  
$ npm install connect formidable spindrift pdfkit passport passport-local poppler-glib \
      libpoppler-glib-dev pdfutils mongodb password-hash util mkpath easyimage multiparty \
       --save fs-extra

$ apt-get install imagemagick

Execution:
$ nodejs index.js

Open the application with the path as 127.0.0.1:3000

This demo displays the structure of the application with login and register form,
Instructor page with video and ppt display, upload form for the instructor to upload the pdf,
pdf are converted into images at backend and are displayed as images in the canavs on the browser, 
Student page for displaying ppt as well as the video of the professor.
